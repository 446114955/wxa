(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{517:function(_,v,a){"use strict";a.r(v);var t=a(29),e=Object(t.a)({},(function(){var _=this,v=_.$createElement,a=_._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h1",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[_._v("#")]),_._v(" 介绍")]),_._v(" "),a("p",[_._v("轻量级的渐进式小程序开发框架，专注于小程序原生开发，提供更好的工程化、代码复用能力，提高开发效率并改善开发体验。")]),_._v(" "),a("p",[_._v("wxa 是一个"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Aspect-oriented_programming",target:"_blank",rel:"noopener noreferrer"}},[_._v("AOP"),a("OutboundLink")],1),_._v("框架，通过预编译和运行时动态代理实现对小程序实例方法的拦截、改写、新增等操作。")]),_._v(" "),a("p",[_._v("wxa 是一套完善的微信小程序开发解决方案，通过 Decorator 增强小程序能力，基于 nodejs 工程化小程序开发流程，同时支持类 Vue 单文件开发（SFC）和原生小程序开发！")]),_._v(" "),a("h2",{attrs:{id:"它是如何工作的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#它是如何工作的"}},[_._v("#")]),_._v(" 它是如何工作的？")]),_._v(" "),a("p",[_._v("一个"),a("code",[_._v("wxa")]),_._v("项目实际上是由 "),a("code",[_._v("@wxa/core")]),_._v("，"),a("code",[_._v("@wxa/cli2")]),_._v(" 以及小程序原生能力驱动的应用。通过 cli 为小程序和 npm 仓库搭建了直接沟通的桥梁，使得无数优秀的类库有了直接在小程序上使用的可能。而 "),a("code",[_._v("@wxa/core")]),_._v(" 则为小程序开发提供了许多最佳实践。")]),_._v(" "),a("h2",{attrs:{id:"为什么选用它"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么选用它"}},[_._v("#")]),_._v(" 为什么选用它？")]),_._v(" "),a("h3",{attrs:{id:"wxa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wxa"}},[_._v("#")]),_._v(" wxa")]),_._v(" "),a("p",[_._v("也许你的项目是为了得到良好的性能、减少因为引入复杂框架导致的潜在项目威胁、或者是为了快速迭代上线，而选用了原生的小程序开发。那么 wxa 将会高度适配你的需求，贴合原生开发，开箱即用的工程化能力，渐进式的搭建你的小程序应用。")]),_._v(" "),a("h3",{attrs:{id:"taro-3-0-remax-js-kbone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#taro-3-0-remax-js-kbone"}},[_._v("#")]),_._v(" Taro 3.0 & Remax.js & Kbone")]),_._v(" "),a("p",[_._v("如果项目具有跨小程序端和 Web 端 的需求，建议优先考虑这三个框架，其中 Taro 社区运营做的比较好，而 Kbone 属于官方框架，通过内置库（use）能减少项目打包的体积。")]),_._v(" "),a("h3",{attrs:{id:"wepy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wepy"}},[_._v("#")]),_._v(" WePY")]),_._v(" "),a("p",[_._v("WePY 是最早开源的小程序框架，在16年末期那个时候小程序还没有推出自定义组件，WePY 通过 template 和编译手段，自己实现了一套组件化的方案，但由于其组件没有独立的运行时实例会导致出现很多诡异的问题，这点从当初无数的 ISSUE 可以看出来。如今官方已经支持自定义组件，且组件化方案已经相对完善的情况下，推荐使用自定义组件。")]),_._v(" "),a("h2",{attrs:{id:"技术特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#技术特性"}},[_._v("#")]),_._v(" 技术特性")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("原生友好")]),_._v(" "),a("ul",[a("li",[_._v("迁移一个旧项目到wxa只需要几分钟")]),_._v(" "),a("li",[_._v("良好的原生组件开发支持")])])]),_._v(" "),a("li",[a("p",[_._v("简洁好用的核心类库"),a("code",[_._v("@wxa/core")])]),_._v(" "),a("ul",[a("li",[a("strong",[_._v("Decorator")]),_._v(" 切面编程，无缝增强")]),_._v(" "),a("li",[a("strong",[_._v("Mixins")]),_._v(" 分离逻辑，复用代码，提高可维护性")]),_._v(" "),a("li",[a("strong",[_._v("Plugins")]),_._v(" 插件机制")]),_._v(" "),a("li",[a("strong",[_._v("Redux")]),_._v(" 全局状态管理方案")]),_._v(" "),a("li",[a("strong",[_._v("Promise")]),_._v(" 化小程序api")]),_._v(" "),a("li",[a("strong",[_._v("Eventbus")]),_._v(" 自定义事件")]),_._v(" "),a("li",[a("strong",[_._v("Router")]),_._v(" 路由跳转")])])]),_._v(" "),a("li",[a("p",[_._v("功能齐全的命令行工具"),a("code",[_._v("@wxa/cli")])]),_._v(" "),a("ul",[a("li",[_._v("Npm依赖解析")]),_._v(" "),a("li",[_._v("灵活的编译配置\n"),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/webpack/tapable",target:"_blank",rel:"noopener noreferrer"}},[_._v("Tapable"),a("OutboundLink")],1),_._v("插件机制")]),_._v(" "),a("li",[_._v("可拔插的编译器")])])]),_._v(" "),a("li",[_._v("多开发模式支持\n"),a("ul",[a("li",[_._v("支持小程序原生开发")]),_._v(" "),a("li",[_._v("支持Vue单文件开发模式")])])]),_._v(" "),a("li",[_._v("组件良好支持\n"),a("ul",[a("li",[_._v("原生组件")]),_._v(" "),a("li",[_._v("第三方原生组件")])])]),_._v(" "),a("li",[_._v("调用微信开发者工具\n"),a("ul",[a("li",[_._v("上传代码")]),_._v(" "),a("li",[_._v("预览项目")])])])])])])])}),[],!1,null,null,null);v.default=e.exports}}]);